#---------------------------  GET POST PUT DELETE ------------------------#

# GET: ask system for data and get response (data)
# POST: we give data to system ( not interested in response)
# POST : update data
# DELETE data in servers

#----------------------- HABIT TRACKER USING API. pixela -------------------#
import requests
import datetime as dt

#------------------------------ CREATE USER ----------------------------#
pixela_endpoint = "https://pixe.la/v1/users"

USERNAME = "muhammad6236"
TOKEN = "j5vb83m23mn58n3q45"

GRAPH_ID = "graph1"

# HEADERS : headers are used for authentication (key) so it is not visible
headers = {
    "X-USER-TOKEN": TOKEN
}
#
# user_params = {
#     "token": "j5vb83m23mn58n3q45",          # generated by user
#     "username" : "muhammad6236",
# "agreeTermsOfService" : "yes",
#     "notMinor": "yes",
# }
# #
# # response = requests.post(url=pixela_endpoint, json=user_params)           # its done hence comment out
# # print(response.text)

#----------------------- CREATE GRAPH ---------------------#


#
# graph_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs"
#

# #
# graph_config = {
#
#     "id": GRAPH_ID,
#     "name": "Cycling Graph",
#     "unit": "Km",
#     "type": "float",
#     "color": "shibafu",
# }
#
#
# response = requests.post(url=graph_endpoint, json=graph_config, headers=headers)
# print(response.text)

#---------------------------- CREATE PIXEL --------------------------#
# USING strftime for precise date format eg yymmdd

today = dt.datetime.now()
yesterday = dt.datetime(year=2022, month=9, day=20)

today_format = today.strftime("%Y%m%d")
yesterday_format = yesterday.strftime("%Y%m%d")
# print(yesterday.strftime("%Y%m%d"))
# pixel_data = {
#     "date": yesterday.strftime("%Y%m%d"),
#     "quantity": "9.74",
# }
#
# update_graph_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}"
#
# update_response = requests.post(url=update_graph_endpoint, json=pixel_data, headers=headers)
# print(update_response.text)

#----------------------------- UPDATE GRAPH (PUT) & delete ---------------------#

update_pixel_endpoint = f"{pixela_endpoint}/{USERNAME}/graphs/{GRAPH_ID}/{yesterday_format}"

updated_pixel = {
    "quantity": "20",
}

# for DELETE NO NEED PARAMETERS

pixel_update_response = requests.delete(url=update_pixel_endpoint, headers=headers)
print(pixel_update_response.text)





